{"version":3,"file":"index.js","sources":["../../../src/utils/formatting.ts","../../../src/utils/dom.ts","../../../src/plugins/monthSelect/index.ts"],"sourcesContent":["import { int, pad } from \"../utils\";\nimport { Locale } from \"../types/locale\";\nimport { ParsedOptions } from \"../types/options\";\n\nexport type token =\n  | \"D\"\n  | \"F\"\n  | \"G\"\n  | \"H\"\n  | \"J\"\n  | \"K\"\n  | \"M\"\n  | \"S\"\n  | \"U\"\n  | \"W\"\n  | \"Y\"\n  | \"Z\"\n  | \"d\"\n  | \"h\"\n  | \"i\"\n  | \"j\"\n  | \"l\"\n  | \"m\"\n  | \"n\"\n  | \"s\"\n  | \"u\"\n  | \"w\"\n  | \"y\";\n\nconst doNothing = (): undefined => undefined;\n\nexport const monthToStr = (\n  monthNumber: number,\n  shorthand: boolean,\n  locale: Locale\n) => locale.months[shorthand ? \"shorthand\" : \"longhand\"][monthNumber];\n\nexport type RevFormatFn = (\n  date: Date,\n  data: string,\n  locale: Locale\n) => Date | void | undefined;\nexport type RevFormat = Record<string, RevFormatFn>;\nexport const revFormat: RevFormat = {\n  D: doNothing,\n  F: function (dateObj: Date, monthName: string, locale: Locale) {\n    dateObj.setMonth(locale.months.longhand.indexOf(monthName));\n  },\n  G: (dateObj: Date, hour: string) => {\n    dateObj.setHours((dateObj.getHours() >= 12 ? 12 : 0) + parseFloat(hour));\n  },\n  H: (dateObj: Date, hour: string) => {\n    dateObj.setHours(parseFloat(hour));\n  },\n  J: (dateObj: Date, day: string) => {\n    dateObj.setDate(parseFloat(day));\n  },\n  K: (dateObj: Date, amPM: string, locale: Locale) => {\n    dateObj.setHours(\n      (dateObj.getHours() % 12) +\n        12 * int(new RegExp(locale.amPM[1], \"i\").test(amPM))\n    );\n  },\n  M: function (dateObj: Date, shortMonth: string, locale: Locale) {\n    dateObj.setMonth(locale.months.shorthand.indexOf(shortMonth));\n  },\n  S: (dateObj: Date, seconds: string) => {\n    dateObj.setSeconds(parseFloat(seconds));\n  },\n  U: (_: Date, unixSeconds: string) => new Date(parseFloat(unixSeconds) * 1000),\n\n  W: function (dateObj: Date, weekNum: string, locale: Locale) {\n    const weekNumber = parseInt(weekNum);\n    const date = new Date(\n      dateObj.getFullYear(),\n      0,\n      2 + (weekNumber - 1) * 7,\n      0,\n      0,\n      0,\n      0\n    );\n    date.setDate(date.getDate() - date.getDay() + locale.firstDayOfWeek);\n\n    return date;\n  },\n  Y: (dateObj: Date, year: string) => {\n    dateObj.setFullYear(parseFloat(year));\n  },\n  Z: (_: Date, ISODate: string) => new Date(ISODate),\n\n  d: (dateObj: Date, day: string) => {\n    dateObj.setDate(parseFloat(day));\n  },\n  h: (dateObj: Date, hour: string) => {\n    dateObj.setHours((dateObj.getHours() >= 12 ? 12 : 0) + parseFloat(hour));\n  },\n  i: (dateObj: Date, minutes: string) => {\n    dateObj.setMinutes(parseFloat(minutes));\n  },\n  j: (dateObj: Date, day: string) => {\n    dateObj.setDate(parseFloat(day));\n  },\n  l: doNothing,\n  m: (dateObj: Date, month: string) => {\n    dateObj.setMonth(parseFloat(month) - 1);\n  },\n  n: (dateObj: Date, month: string) => {\n    dateObj.setMonth(parseFloat(month) - 1);\n  },\n  s: (dateObj: Date, seconds: string) => {\n    dateObj.setSeconds(parseFloat(seconds));\n  },\n  u: (_: Date, unixMillSeconds: string) =>\n    new Date(parseFloat(unixMillSeconds)),\n  w: doNothing,\n  y: (dateObj: Date, year: string) => {\n    dateObj.setFullYear(2000 + parseFloat(year));\n  },\n};\n\nexport type TokenRegex = { [k in token]: string };\nexport const tokenRegex: TokenRegex = {\n  D: \"\", // locale-dependent, setup on runtime\n  F: \"\", // locale-dependent, setup on runtime\n  G: \"(\\\\d\\\\d|\\\\d)\",\n  H: \"(\\\\d\\\\d|\\\\d)\",\n  J: \"(\\\\d\\\\d|\\\\d)\\\\w+\",\n  K: \"\", // locale-dependent, setup on runtime\n  M: \"\", // locale-dependent, setup on runtime\n  S: \"(\\\\d\\\\d|\\\\d)\",\n  U: \"(.+)\",\n  W: \"(\\\\d\\\\d|\\\\d)\",\n  Y: \"(\\\\d{4})\",\n  Z: \"(.+)\",\n  d: \"(\\\\d\\\\d|\\\\d)\",\n  h: \"(\\\\d\\\\d|\\\\d)\",\n  i: \"(\\\\d\\\\d|\\\\d)\",\n  j: \"(\\\\d\\\\d|\\\\d)\",\n  l: \"\", // locale-dependent, setup on runtime\n  m: \"(\\\\d\\\\d|\\\\d)\",\n  n: \"(\\\\d\\\\d|\\\\d)\",\n  s: \"(\\\\d\\\\d|\\\\d)\",\n  u: \"(.+)\",\n  w: \"(\\\\d\\\\d|\\\\d)\",\n  y: \"(\\\\d{2})\",\n};\n\nexport type Formats = Record<\n  token,\n  (date: Date, locale: Locale, options: ParsedOptions) => string | number\n>;\nexport const formats: Formats = {\n  // get the date in UTC\n  Z: (date: Date) => date.toISOString(),\n\n  // weekday name, short, e.g. Thu\n  D: function (date: Date, locale: Locale, options: ParsedOptions) {\n    return locale.weekdays.shorthand[\n      formats.w(date, locale, options) as number\n    ];\n  },\n\n  // full month name e.g. January\n  F: function (date: Date, locale: Locale, options: ParsedOptions) {\n    return monthToStr(\n      (formats.n(date, locale, options) as number) - 1,\n      false,\n      locale\n    );\n  },\n\n  // padded hour 1-12\n  G: function (date: Date, locale: Locale, options: ParsedOptions) {\n    return pad(formats.h(date, locale, options));\n  },\n\n  // hours with leading zero e.g. 03\n  H: (date: Date) => pad(date.getHours()),\n\n  // day (1-30) with ordinal suffix e.g. 1st, 2nd\n  J: function (date: Date, locale: Locale) {\n    return locale.ordinal !== undefined\n      ? date.getDate() + locale.ordinal(date.getDate())\n      : date.getDate();\n  },\n\n  // AM/PM\n  K: (date: Date, locale: Locale) => locale.amPM[int(date.getHours() > 11)],\n\n  // shorthand month e.g. Jan, Sep, Oct, etc\n  M: function (date: Date, locale: Locale) {\n    return monthToStr(date.getMonth(), true, locale);\n  },\n\n  // seconds 00-59\n  S: (date: Date) => pad(date.getSeconds()),\n\n  // unix timestamp\n  U: (date: Date) => date.getTime() / 1000,\n\n  W: function (date: Date, _: Locale, options: ParsedOptions) {\n    return options.getWeek(date);\n  },\n\n  // full year e.g. 2016, padded (0001-9999)\n  Y: (date: Date) => pad(date.getFullYear(), 4),\n\n  // day in month, padded (01-30)\n  d: (date: Date) => pad(date.getDate()),\n\n  // hour from 1-12 (am/pm)\n  h: (date: Date) => (date.getHours() % 12 ? date.getHours() % 12 : 12),\n\n  // minutes, padded with leading zero e.g. 09\n  i: (date: Date) => pad(date.getMinutes()),\n\n  // day in month (1-30)\n  j: (date: Date) => date.getDate(),\n\n  // weekday name, full, e.g. Thursday\n  l: function (date: Date, locale: Locale) {\n    return locale.weekdays.longhand[date.getDay()];\n  },\n\n  // padded month number (01-12)\n  m: (date: Date) => pad(date.getMonth() + 1),\n\n  // the month number (1-12)\n  n: (date: Date) => date.getMonth() + 1,\n\n  // seconds 0-59\n  s: (date: Date) => date.getSeconds(),\n\n  // Unix Milliseconds\n  u: (date: Date) => date.getTime(),\n\n  // number of the day of the week\n  w: (date: Date) => date.getDay(),\n\n  // last two digits of year e.g. 16 for 2016\n  y: (date: Date) => String(date.getFullYear()).substring(2),\n};\n","export function toggleClass(\n  elem: HTMLElement,\n  className: string,\n  bool: boolean\n) {\n  if (bool === true) return elem.classList.add(className);\n  elem.classList.remove(className);\n}\n\nexport function createElement<T extends HTMLElement>(\n  tag: keyof HTMLElementTagNameMap,\n  className: string,\n  content?: string\n): T {\n  const e = window.document.createElement(tag) as T;\n  className = className || \"\";\n  content = content || \"\";\n\n  e.className = className;\n\n  if (content !== undefined) e.textContent = content;\n\n  return e;\n}\n\nexport function clearNode(node: HTMLElement) {\n  while (node.firstChild) node.removeChild(node.firstChild);\n}\n\nexport function findParent(\n  node: Element,\n  condition: (n: Element) => boolean\n): Element | undefined {\n  if (condition(node)) return node;\n  else if (node.parentNode)\n    return findParent(node.parentNode as Element, condition);\n\n  return undefined; // nothing found\n}\n\nexport function createNumberInput(\n  inputClassName: string,\n  opts?: Record<string, any>\n) {\n  const wrapper = createElement<HTMLDivElement>(\"div\", \"numInputWrapper\"),\n    numInput = createElement<HTMLInputElement>(\n      \"input\",\n      \"numInput \" + inputClassName\n    ),\n    arrowUp = createElement<HTMLSpanElement>(\"span\", \"arrowUp\"),\n    arrowDown = createElement<HTMLSpanElement>(\"span\", \"arrowDown\");\n\n  if (navigator.userAgent.indexOf(\"MSIE 9.0\") === -1) {\n    numInput.type = \"number\";\n  } else {\n    numInput.type = \"text\";\n    numInput.pattern = \"\\\\d*\";\n  }\n\n  if (opts !== undefined)\n    for (const key in opts) numInput.setAttribute(key, opts[key]);\n\n  wrapper.appendChild(numInput);\n  wrapper.appendChild(arrowUp);\n  wrapper.appendChild(arrowDown);\n\n  return wrapper;\n}\n\nexport function getEventTarget(event: Event): EventTarget | null {\n  try {\n    if (typeof event.composedPath === \"function\") {\n      const path = event.composedPath();\n      return path[0];\n    }\n    return event.target;\n  } catch (error) {\n    return event.target;\n  }\n}\n","import { Plugin } from \"../../types/options\";\nimport { Instance, DayElement } from \"../../types/instance\";\nimport { monthToStr } from \"../../utils/formatting\";\nimport { clearNode, getEventTarget } from \"../../utils/dom\";\n\nexport interface Config {\n  shorthand: boolean;\n  dateFormat: string;\n  altFormat: string;\n  theme: string;\n  _stubbedCurrentMonth?: number;\n}\n\nexport interface ElementDate extends Element {\n  dateObj: Date;\n}\n\nexport type MonthElement = HTMLSpanElement & { dateObj: Date; $i: number };\n\nconst defaultConfig: Config = {\n  shorthand: false,\n  dateFormat: \"F Y\",\n  altFormat: \"F Y\",\n  theme: \"light\",\n};\n\nfunction monthSelectPlugin(pluginConfig?: Partial<Config>): Plugin {\n  const config = { ...defaultConfig, ...pluginConfig };\n\n  return (fp: Instance) => {\n    fp.config.dateFormat = config.dateFormat;\n    fp.config.altFormat = config.altFormat;\n    const self = { monthsContainer: null as null | HTMLDivElement };\n\n    function clearUnnecessaryDOMElements(): void {\n      if (!fp.rContainer) return;\n\n      clearNode(fp.rContainer);\n\n      for (let index = 0; index < fp.monthElements.length; index++) {\n        const element = fp.monthElements[index];\n        if (!element.parentNode) continue;\n\n        element.parentNode.removeChild(element);\n      }\n    }\n\n    function build() {\n      if (!fp.rContainer) return;\n\n      self.monthsContainer = fp._createElement<HTMLDivElement>(\n        \"div\",\n        \"flatpickr-monthSelect-months\"\n      );\n\n      self.monthsContainer.tabIndex = -1;\n\n      buildMonths();\n\n      fp.rContainer.appendChild(self.monthsContainer);\n\n      fp.calendarContainer.classList.add(\n        `flatpickr-monthSelect-theme-${config.theme}`\n      );\n    }\n\n    function buildMonths() {\n      if (!self.monthsContainer) return;\n\n      clearNode(self.monthsContainer);\n\n      const frag = document.createDocumentFragment();\n\n      for (let i = 0; i < 12; i++) {\n        const month = fp.createDay(\n          \"flatpickr-monthSelect-month\",\n          new Date(fp.currentYear, i),\n          0,\n          i\n        );\n        if (\n          month.dateObj.getMonth() === new Date().getMonth() &&\n          month.dateObj.getFullYear() === new Date().getFullYear()\n        )\n          month.classList.add(\"today\");\n        month.textContent = monthToStr(i, config.shorthand, fp.l10n);\n        month.addEventListener(\"click\", selectMonth);\n        frag.appendChild(month);\n      }\n\n      self.monthsContainer.appendChild(frag);\n      if (\n        fp.config.minDate &&\n        fp.currentYear === fp.config.minDate.getFullYear()\n      )\n        fp.prevMonthNav.classList.add(\"flatpickr-disabled\");\n      else fp.prevMonthNav.classList.remove(\"flatpickr-disabled\");\n\n      if (\n        fp.config.maxDate &&\n        fp.currentYear === fp.config.maxDate.getFullYear()\n      )\n        fp.nextMonthNav.classList.add(\"flatpickr-disabled\");\n      else fp.nextMonthNav.classList.remove(\"flatpickr-disabled\");\n    }\n\n    function bindEvents() {\n      fp._bind(fp.prevMonthNav, \"click\", (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        fp.changeYear(fp.currentYear - 1);\n        selectYear();\n        buildMonths();\n      });\n\n      fp._bind(fp.nextMonthNav, \"click\", (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        fp.changeYear(fp.currentYear + 1);\n        selectYear();\n        buildMonths();\n      });\n\n      fp._bind(\n        self.monthsContainer as HTMLElement,\n        \"mouseover\",\n        (e: MouseEvent) => {\n          if (fp.config.mode === \"range\")\n            fp.onMouseOver(\n              getEventTarget(e) as DayElement,\n              \"flatpickr-monthSelect-month\"\n            );\n        }\n      );\n    }\n\n    function setCurrentlySelected() {\n      if (!fp.rContainer) return;\n      if (!fp.selectedDates.length) return;\n\n      const currentlySelected = fp.rContainer.querySelectorAll(\n        \".flatpickr-monthSelect-month.selected\"\n      );\n\n      for (let index = 0; index < currentlySelected.length; index++) {\n        currentlySelected[index].classList.remove(\"selected\");\n      }\n\n      const targetMonth = fp.selectedDates[0].getMonth();\n      const month = fp.rContainer.querySelector(\n        `.flatpickr-monthSelect-month:nth-child(${targetMonth + 1})`\n      );\n\n      if (month) {\n        month.classList.add(\"selected\");\n      }\n    }\n\n    function selectYear() {\n      let selectedDate = fp.selectedDates[0];\n      if (selectedDate) {\n        selectedDate = new Date(selectedDate);\n        selectedDate.setFullYear(fp.currentYear);\n        if (fp.config.minDate && selectedDate < fp.config.minDate) {\n          selectedDate = fp.config.minDate;\n        }\n        if (fp.config.maxDate && selectedDate > fp.config.maxDate) {\n          selectedDate = fp.config.maxDate;\n        }\n        fp.currentYear = selectedDate.getFullYear();\n      }\n\n      fp.currentYearElement.value = String(fp.currentYear);\n\n      if (fp.rContainer) {\n        const months: NodeListOf<ElementDate> = fp.rContainer.querySelectorAll(\n          \".flatpickr-monthSelect-month\"\n        );\n        months.forEach((month) => {\n          month.dateObj.setFullYear(fp.currentYear);\n          if (\n            (fp.config.minDate && month.dateObj < fp.config.minDate) ||\n            (fp.config.maxDate && month.dateObj > fp.config.maxDate)\n          ) {\n            month.classList.add(\"flatpickr-disabled\");\n          } else {\n            month.classList.remove(\"flatpickr-disabled\");\n          }\n        });\n      }\n      setCurrentlySelected();\n    }\n\n    function selectMonth(e: Event) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      const eventTarget = getEventTarget(e);\n\n      if (!(eventTarget instanceof Element)) return;\n      if (eventTarget.classList.contains(\"flatpickr-disabled\")) return;\n      if (eventTarget.classList.contains(\"notAllowed\")) return; // necessary??\n\n      setMonth((eventTarget as MonthElement).dateObj);\n\n      if (fp.config.closeOnSelect) {\n        const single = fp.config.mode === \"single\";\n        const range =\n          fp.config.mode === \"range\" && fp.selectedDates.length === 2;\n\n        if (single || range) fp.close();\n      }\n    }\n\n    function setMonth(date: Date) {\n      const selectedDate = new Date(\n        fp.currentYear,\n        date.getMonth(),\n        date.getDate()\n      );\n      let selectedDates: Date[] = [];\n\n      switch (fp.config.mode) {\n        case \"single\":\n          selectedDates = [selectedDate];\n          break;\n\n        case \"multiple\":\n          selectedDates.push(selectedDate);\n          break;\n\n        case \"range\":\n          if (fp.selectedDates.length === 2) {\n            selectedDates = [selectedDate];\n          } else {\n            selectedDates = fp.selectedDates.concat([selectedDate]);\n            selectedDates.sort((a, b) => a.getTime() - b.getTime());\n          }\n\n          break;\n      }\n\n      fp.setDate(selectedDates, true);\n      setCurrentlySelected();\n    }\n\n    const shifts: Record<number, number> = {\n      37: -1,\n      39: 1,\n      40: 3,\n      38: -3,\n    };\n\n    function onKeyDown(_: any, __: any, ___: any, e: KeyboardEvent) {\n      const shouldMove = shifts[e.keyCode] !== undefined;\n      if (!shouldMove && e.keyCode !== 13) {\n        return;\n      }\n\n      if (!fp.rContainer || !self.monthsContainer) return;\n\n      const currentlySelected = fp.rContainer.querySelector(\n        \".flatpickr-monthSelect-month.selected\"\n      ) as HTMLElement;\n\n      let index = Array.prototype.indexOf.call(\n        self.monthsContainer.children,\n        document.activeElement\n      );\n\n      if (index === -1) {\n        const target =\n          currentlySelected || self.monthsContainer.firstElementChild;\n        target.focus();\n        index = (target as MonthElement).$i;\n      }\n\n      if (shouldMove) {\n        (self.monthsContainer.children[\n          (12 + index + shifts[e.keyCode]) % 12\n        ] as HTMLElement).focus();\n      } else if (\n        e.keyCode === 13 &&\n        self.monthsContainer.contains(document.activeElement)\n      ) {\n        setMonth((document.activeElement as MonthElement).dateObj);\n      }\n    }\n\n    function closeHook() {\n      if (fp.config?.mode === \"range\" && fp.selectedDates.length === 1)\n        fp.clear(false);\n\n      if (!fp.selectedDates.length) buildMonths();\n    }\n\n    // Help the prev/next year nav honor config.minDate (see 3fa5a69)\n    function stubCurrentMonth() {\n      config._stubbedCurrentMonth = fp._initialDate.getMonth();\n\n      fp._initialDate.setMonth(config._stubbedCurrentMonth);\n      fp.currentMonth = config._stubbedCurrentMonth;\n    }\n\n    function unstubCurrentMonth() {\n      if (!config._stubbedCurrentMonth) return;\n\n      fp._initialDate.setMonth(config._stubbedCurrentMonth);\n      fp.currentMonth = config._stubbedCurrentMonth;\n      delete config._stubbedCurrentMonth;\n    }\n\n    function destroyPluginInstance() {\n      if (self.monthsContainer !== null) {\n        const months = self.monthsContainer.querySelectorAll(\n          \".flatpickr-monthSelect-month\"\n        );\n\n        for (let index = 0; index < months.length; index++) {\n          months[index].removeEventListener(\"click\", selectMonth);\n        }\n      }\n    }\n\n    return {\n      onParseConfig() {\n        fp.config.enableTime = false;\n      },\n      onValueUpdate: setCurrentlySelected,\n      onKeyDown,\n      onReady: [\n        stubCurrentMonth,\n        clearUnnecessaryDOMElements,\n        build,\n        bindEvents,\n        setCurrentlySelected,\n        () => {\n          fp.config.onClose.push(closeHook);\n          fp.loadedPlugins.push(\"monthSelect\");\n        },\n      ],\n      onDestroy: [\n        unstubCurrentMonth,\n        destroyPluginInstance,\n        () => {\n          fp.config.onClose = fp.config.onClose.filter(\n            (hook) => hook !== closeHook\n          );\n        },\n      ],\n    };\n  };\n}\n\nexport default monthSelectPlugin;\n"],"names":[],"mappings":"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"}